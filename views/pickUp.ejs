<!DOCTYPE html>
<html lang="en">

<head>
    <%- include("./partials/head"); %>
        <style>
            .alert {
                display: flex;
                justify-content: space-between;
            }

            .close {
                cursor: pointer;
            }
        </style>
</head>

<body>
    <div id="app">
        <div class="container">
            <h1>Pickup</h1>
            <form @submit.prevent="search(stdID)">
                <div class="form-floating mb-3">
                    <input v-model="stdID" type="text" class="form-control" id="floatingInput" placeholder="Student ID">
                    <label for="floatingInput">Student ID</label>
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary mb-2">Search</button>
                </div>
            </form>

            <div v-if="errMsg" class="alert alert-danger" role="alert">
                {{errMsg}}
            </div>

            <div v-if="queue" class="card">
                <div class="card-header">
                    Reservation
                </div>
                <div class="card-body">
                    <h5 class="card-title">Reservation for {{searchStudent.id}} {{searchStudent.name}}
                        {{searchStudent.class}}</h5>
                    <a @click="deleteQueue(searchStudent.id)" href="#" class="btn btn-outline-success">Finish</a>
                </div>
                <div class="card-footer text-muted">
                    Reserved: {{timeFromNow}}
                </div>
            </div>

            <div v-else>

                <div v-if="searchStudent.id" class="card">
                    <div class="card-body">
                        <strong class="card-title text-muted">{{searchStudent.id}} | </strong>
                        <span class="card-text">{{searchStudent.name}} | {{searchStudent.class}}</span>
                    </div>

                    <div class="card-footer text-muted d-flex">
                        <button @click="addQueue(searchStudent)" href="#" class="btn btn-primary">Reserve</button>

                        <select v-model="pickupType" class="form-select ms-2 w-25">
                            <option selected value="walk">Walk</option>
                            <option value="car">Car</option>
                        </select>
                    </div>
                </div>

            </div>


            <div v-if="showModal" class="alert alert-success" role="alert">
                <span>
                    <strong>Well done!</strong> Add Queue Successfully
                </span>
                <div class="close" @click="reset()">
                    <i class="fa-solid fa-xmark"></i>
                </div>
            </div>


        </div>
    </div>


    <%- include("./partials/scripts"); %>
        <script>
            dayjs.extend(dayjs_plugin_relativeTime)
            const { createApp, ref, computed } = Vue

            createApp({
                setup() {
                    const searchStudent = ref({})
                    const stdID = ref("")
                    const alertText = ""
                    const showModal = ref(false)
                    const queue = ref("")
                    const timeFromNow = ref("")
                    const errMsg = ref("")
                    const pickupType = ref('walk')

                    const search = async (id) => {
                        reset()

                        if (id) {


                            try {
                                const res = await axios.get(`${baseURL}/db/Students/${id}`)
                                searchStudent.value = res.data
                            } catch (err) {
                                errMsg.value = err.message
                                console.log(err)
                            }

                            getQueue(id)
                        } else {
                            errMsg.value = 'Please enter student ID'
                        }

                    }

                    const getQueue = async (id) => {
                        const res = await axios.get(`${baseURL}/api/${id}`)
                        queue.value = res.data
                        timeFormat()
                    }

                    const addQueue = (std) => {
                        std.pickupType = pickupType.value
                        console.log(std)
                        axios.post(`${baseURL}/api/add/queue`, std)
                        getQueue(std.id)
                    }

                    const deleteQueue = (id) => {
                        axios.delete(`${baseURL}/api/delete/${id}`)
                        getQueue(id)
                    }

                    const reset = () => {
                        showModal.value = false
                        stdID.value = ""
                        errMsg.value = ""
                        searchStudent.value = {}
                    }

                    const timeFormat = () => {
                        if (queue.value.time) {
                            timeFromNow.value = dayjs(queue.value.time).fromNow();

                            setInterval(() => {
                                timeFormat()
                            }, 1000);
                        }
                    }

                    return {
                        stdID,
                        showModal,
                        searchStudent,
                        queue,
                        timeFromNow,
                        pickupType,
                        errMsg,
                        search,
                        reset,
                        addQueue,
                        deleteQueue
                    }
                }
            }).mount('#app')
        </script>
</body>

</html>